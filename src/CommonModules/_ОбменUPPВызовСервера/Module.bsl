
#Область Прочее

Процедура ДобавитьСообщенияПользователюВТекстОшибки(ТекстОшибки, УдалятьПолученные = Истина) Экспорт
	
	Для Каждого Сообщение Из ПолучитьСообщенияПользователю(УдалятьПолученные) Цикл
		ДобавитьСтрокуВТекст(Сообщение.Текст, ТекстОшибки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьСтрокуВТекст(пСтрока, пТекст) Экспорт
	
	Если НЕ ЗначениеЗаполнено(пСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(пТекст) Тогда
		
		пТекст = пСтрока;
		
	Иначе
		
		пТекст = пТекст + Символы.ПС + пСтрока;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьСтрокуПодТекст(пСтрока, пТекст, Отказ = Ложь) Экспорт
	
	Отказ = Истина;
	
	Если Не ЗначениеЗаполнено(пСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(пТекст) Тогда
		
		пТекст = пСтрока;
		
	Иначе
		
		строкаПодТекст = Символы.ПС + пСтрока;
		строкаПодТекст = СтрЗаменить(строкаПодТекст, Символы.ПС, Символы.ПС + Символы.Таб);
		
		пТекст = пТекст + строкаПодТекст;
		
	КонецЕсли;
	
КонецПроцедуры

Функция глЗначениеСтруктуры(Знач пСтруктура, Знач пКлюч, Знач пЗначениеПоУмолчанию = Неопределено ) Экспорт
	
	массивКлючей = СтрРазделить( пКлюч, ".", Ложь );
	
	Если массивКлючей.Количество() = 0 Тогда
		
		Возврат пСтруктура;
		
	КонецЕсли;
	
	Если Не ТипЗнч( пСтруктура ) = Тип("Структура")
		И Не ТипЗнч( пСтруктура ) = Тип("ДанныеФормыСтруктура") Тогда
		
		Возврат пЗначениеПоУмолчанию;
		
	КонецЕсли;
	
	текКлюч = массивКлючей[0];
	
	Если Не пСтруктура.Свойство( текКлюч ) Тогда
		
		Возврат пЗначениеПоУмолчанию;
		
	КонецЕсли;
	
	Если массивКлючей.Количество() = 1 Тогда
		
		Возврат пСтруктура[текКлюч];
		
	Иначе
		
		массивКлючей.Удалить( 0 );
		новКлюч = СтрСоединить( массивКлючей, "." );
		
		Возврат глЗначениеСтруктуры( пСтруктура[текКлюч], новКлюч, пЗначениеПоУмолчанию );
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти
